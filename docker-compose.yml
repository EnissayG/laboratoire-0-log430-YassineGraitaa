version: "3.9"

services:
  # üì¶ Base de donn√©es du monolithe
  db:
    image: postgres:15
    container_name: log430-postgres
    restart: always
    environment:
      POSTGRES_DB: magasin
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # üß± Application monolithique actuelle
  api:
    build: .
    container_name: log430-app
    depends_on:
      - db
    environment:
      POSTGRES_DB: magasin
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      DB_HOST: db
      DB_PORT: 5432
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    working_dir: /app
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # üñºÔ∏è Frontend React
  frontend:
    build:
      context: ./frontend/dashboard
    container_name: log430-frontend
    ports:
      - "3000:3000"
    working_dir: /app
    command: ["npm", "start"]
    volumes:
      - ./frontend/dashboard:/app
    depends_on:
      - api

  # üîÑ Base de donn√©es du microservice produits
  produits-db:
    image: postgres:15
    container_name: produits-postgres
    restart: always
    environment:
      POSTGRES_DB: produits
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - produits-data:/var/lib/postgresql/data

  # üç± Microservice Produits
  produits-service:
    build:
      context: ./microservices/produits-service
    container_name: produits-service
    ports:
      - "8020:8000"
    environment:
      DATABASE_URL: postgresql://user:password@produits-db:5432/produits
    depends_on:
      - produits-db

  # üîÑ Base de donn√©es du microservice Stock

  # üç± Microservice Stock
  stock-service:
    build:
      context: ./microservices/stock-service
    container_name: stock-service
    ports:
      - "8021:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@produits-db:5432/produits
    depends_on:
      - produits-db

  # üîÑ Base de donn√©es du microservice Vente
  ventes-db:
    image: postgres:15
    container_name: ventes-postgres
    restart: always
    environment:
      POSTGRES_DB: ventes
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    volumes:
      - ventes-data:/var/lib/postgresql/data

  # üç± Microservice Vente
  ventes-service:
    build:
      context: ./microservices/ventes-service
    container_name: ventes-service
    ports:
      - "8022:8000"
    environment:
      DATABASE_URL: postgresql://user:password@ventes-db:5432/ventes
    depends_on:
      - ventes-db

  # üîÑ Base de donn√©es du microservice Magasin
  magasin-db:
    image: postgres:15
    container_name: magasin-postgres
    restart: always
    environment:
      POSTGRES_DB: magasins
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5436:5432"
    volumes:
      - magasin-data:/var/lib/postgresql/data

  # üè¨ Microservice Magasin
  magasin-service:
    build:
      context: ./microservices/magasin-service
    container_name: magasin-service
    ports:
      - "8023:8000"
    environment:
      DATABASE_URL: postgresql://user:password@magasin-db:5432/magasins
    depends_on:
      - magasin-db


  client-db:
    image: postgres:15
    container_name: client-postgres
    restart: always
    environment:
      POSTGRES_DB: clients
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5437:5432"
    volumes:
      - client-data:/var/lib/postgresql/data

  client-service:
    build:
      context: ./microservices/client-service
    container_name: client-service
    ports:
      - "8024:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@client-db:5432/clients
    depends_on:
      - client-db

  # üîÑ Base de donn√©es du microservice Panier
  panier-db:
    image: postgres:15
    container_name: panier-postgres
    restart: always
    environment:
      POSTGRES_DB: panier
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5438:5432"
    volumes:
      - panier-data:/var/lib/postgresql/data

  # üõí Microservice Panier
  panier-service:
    build:
      context: ./microservices/panier-service
    container_name: panier-service
    ports:
      - "8025:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@panier-db:5432/panier
    depends_on:
      - panier-db


  # üîÑ Base de donn√©es du microservice Checkout
  checkout-db:
    image: postgres:15
    container_name: checkout-postgres
    restart: always
    environment:
      POSTGRES_DB: checkout
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5439:5432"
    volumes:
      - checkout-data:/var/lib/postgresql/data

  # ‚úÖ Microservice de validation de commande (Checkout)
  checkout-service:
    build:
      context: ./microservices/checkout-service
    container_name: checkout-service
    ports:
      - "8026:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@checkout-db:5432/checkout
    depends_on:
      - checkout-db
  
  gateway:
    image: devopsfaith/krakend:2.6
    container_name: krakend-gateway
    ports:
      - "8090:8080"
    volumes:
      - ./microservices/krakend/krakend.json:/etc/krakend/krakend.json
    command: ["run", "-c", "/etc/krakend/krakend.json"]
    depends_on:
      - produits-service
      - magasin-service
      - ventes-service
      - stock-service
      - client-service
      - panier-service
      - checkout-service

  # üéØ Microservice Orchestrateur
  orchestrateur-service:
    build:
      context: ./microservices/orchestrateur-service
    container_name: orchestrateur-service
    ports:
      - "8027:8000"
    depends_on:
      - panier-service
      - stock-service
      - client-service
      - ventes-service
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]




volumes:
  postgres-data:
  produits-data:
  stock-data:
  ventes-data:
  magasin-data:
  client-data:
  panier-data:
  checkout-data:


  


